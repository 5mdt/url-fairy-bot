---
networks:
  traefik_default:
    external: true
services:
  bot:
    build: bot/
    environment:
      BOT_TOKEN: $BOT_TOKEN
      BASE_URL: $BASE_URL
      DEBUG_MODE: $DEBUG_MODE
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "1m"
    volumes:
      - cache:/cache
  nginx:
    image: nginx:stable-alpine-slim
    environment:
      BASE_URL: $BASE_URL
    labels:
      com.centurylinklabs.watchtower.enable: "true"
      traefik.docker.network: traefik_default
      traefik.enable: true
      traefik.http.routers.url-fairy-bot.entrypoints: websecure
      traefik.http.routers.url-fairy-bot.rule: Host(`$BASE_URL`)
      traefik.http.routers.url-fairy-bot.service: url-fairy-bot
      traefik.http.routers.url-fairy-bot.tls: true
      traefik.http.routers.url-fairy-bot.tls.certresolver: ${LETSENCRYPT_RESOLVER_NAME:-letsencrypt-cloudflare-dns-challenge}
      traefik.http.services.url-fairy-bot.loadbalancer.server.port: 80
    ports:
      - ${PUBLIC_PORT:-"80:80"}
    logging:
      driver: "json-file"
      options:
        max-file: "3"
        max-size: "1m"
    networks:
      - traefik_default
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d
      - ./nginx/theme/:/theme/:ro
      - cache:/cache:ro
  cron:
    image: busybox:stable
    volumes:
      - cache:/cache
    command: "watch -n 60 'find /cache/ -type f -amin +1440 -delete > /dev/null; find /cache/ -type d -empty -delete > /dev/null'"
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    logging:
      driver: none
version: "3"
volumes:
  cache:
