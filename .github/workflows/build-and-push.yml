# build-and-push.yml

name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Determine Git tag
        id: git-tag
        run: echo "::set-output name=tag::$(git describe --exact-match --tags HEAD || echo '')"

      - name: Set tag if empty or invalid
        id: set-tag
        run: |
          if [ -z "${{ steps.git-tag.outputs.tag }}" ]; then
            echo "::set-output name=tag::latest"
          elif [[ "${{ steps.git-tag.outputs.tag }}" == *" "* ]]; then
            echo "::set-output name=tag::latest"
          else
            echo "::set-output name=tag::${{ steps.git-tag.outputs.tag }}"
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set default value for env.PUSH_DOCKER_IMAGE if not defined
        run: |
          if [[ -z "${{ env.PUSH_DOCKER_IMAGE }}" ]]; then
            echo "Variable 'PUSH_DOCKER_IMAGE' is not defined. Setting default value."
            export PUSH_DOCKER_IMAGE=false
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/url-fairy-bot:latest
            ghcr.io/${{ github.repository_owner }}/url-fairy-bot:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/url-fairy-bot:${{ steps.set-tag.outputs.tag }}
